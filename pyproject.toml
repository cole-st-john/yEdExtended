[project]
name = "yedextended"
dynamic = ["version"]
authors = [{ name = "Cole St John", email = "info@colestjohn.com" }]
description = "Python library extending yEd functionality through programmatic interface to graphs."
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "coverage-badge>=1.1.2",
    "coverage>=7.6.8",
    "openpyxl>=3.1.5",
    "pandas>=2.2.3",
    "psutil>=6.1.0",
    "pytest>=8.3.4",
    "pytest-random-order>=1.1.1",
    "mypy>=1.13.0",
    "types-openpyxl>=3.1.5.20241126",
    "pandas-stubs>=2.2.3.241126",
    "types-psutil>=6.1.0.20241102",
]
classifiers = [
	"Programming Language :: Python :: 3 :: Only",
	"Programming Language :: Python :: 3.10",
	"Programming Language :: Python :: 3.11",
	"Programming Language :: Python :: 3.12",
	"License :: OSI Approved :: BSD License",
	"Operating System :: OS Independent",
]


[project.urls]
Homepage = "https://github.com/cole-st-john/yedextended"
Issues = "https://github.com/cole-st-john/yedextended/issues"

[build-system]
requires = ["setuptools>=61.0", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
	".bzr",
	".direnv",
	".eggs",
	".git",
	".git-rewrite",
	".hg",
	".ipynb_checkpoints",
	".mypy_cache",
	".nox",
	".pants.d",
	".pyenv",
	".pytest_cache",
	".pytype",
	".ruff_cache",
	".svn",
	".tox",
	".venv",
	".vscode",
	"__pypackages__",
	"_build",
	"buck-out",
	"build",
	"dist",
	"node_modules",
	"site-packages",
	"venv",
]

extend-include = ["*.ipynb"]

# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.12
target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []
preview = false

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.ruff.lint.isort]
case-sensitive = false


# Performing test coverage statistics - primarily for README.md
[tool.coverage]

[tool.coverage.run]
branch = true
relative_files = true
# https://coverage.readthedocs.io/en/7.5.0/source.html#source
omit = [
	# omit everything in /tests
	"tests/*",
]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
	# Don't complain about missing debug-only code:
	"def __repr__",
	"if self\\.debug",

	# Don't complain if tests don't hit defensive assertion code:
	"raise AssertionError",
	"raise NotImplementedError",

	# Don't complain if non-runnable code isn't run:
	"if 0:",
	"if __name__ == .__main__.:",

	# Don't complain about abstract methods, they aren't run:
	"@(abc\\.)?abstractmethod",
]

ignore_errors = true


[tool.coverage.paths]
source = ["src/"]


[tool.coverage.html]
directory = "coverage_html_report"
